version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: $DOCKER_IMAGE_NAME
    docker:
      - image: circleci/node:12.13.1
jobs:
  build:
    executor: docker-publisher
    working_directory: ~/leopold
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-packages
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: lint
          command: npm run lint
      - run:
          name: test
          command: npm run test
      - run:
          name: generate-docs
          command: npm run docs
      - run:
          name: Build Docker image
          command: |
            docker build -t $DOCKER_IMAGE_NAME .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $DOCKER_IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  dry-run-release:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Dry run of release
          command: |
            npm i
            npx semantic-release --dry-run
  deploy:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            npm i
            npx semantic-release

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - dry-run-release:
          requires:
            - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: develop
