version: 2.1
orbs:
  snyk: snyk/snyk@0.0.8
jobs:
  build:
    working_directory: ~/leopold
    docker:
      - image: circleci/node:12.13.1
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-packages
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - snyk/scan
      - run:
          name: lint
          command: npm run lint
      - run:
          name: test
          command: npm run test
      - run:
          name: Build and Scan Docker image
          command: |
            echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV
            echo 'export TAG=${CIRCLE_SHA1}' >> $BASH_ENV
            echo 'export IMAGE_NAME=leopold' >> $BASH_ENV && source $BASH_ENV
            npm install
            docker build -t $DOCKER_USER/$IMAGE_NAME -t $DOCKER_USER/$IMAGE_NAME:$TAG .
      - snyk/scan:
          fail-on-issues: true
          monitor-on-build: true
          docker-image-name: $DOCKER_USER/$IMAGE_NAME:$TAG
          target-file: "Dockerfile"
          project: ${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}-app
          organization: ${SNYK_CICD_ORGANIZATION}
      - run:
          name: Build and Push Docker image to Docker Hub
          command: |
            echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV
            echo 'export TAG=${CIRCLE_SHA1}' >> $BASH_ENV
            echo 'export IMAGE_NAME=leopold' >> $BASH_ENV && source $BASH_ENV
            npm install
            docker build -t $DOCKER_USER/$IMAGE_NAME -t $DOCKER_USER/$IMAGE_NAME:$TAG .
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKER_USER --password-stdin
            docker push $DOCKER_USER/$IMAGE_NAME
      - run:
          name: balena-login
          command: npm run ci-login -- --token $BALENA_CLI_TOKEN
      - run:
          name: balena-push
          command: npm run ci-deploy
